{"version":3,"sources":["webpack:///./src/views/order/enter/List.vue","webpack:///./src/views/order/enter/List.vue?ab62","webpack:///./src/views/order/enter/List.vue?ef8a","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./src/utils/async.ts"],"names":["class","moudleList","length","complete","data-key","data-sources","data-component","itemComponent","wrap-class","item-class","page-mode","keeps","buffer","estimate-size","extra-props","dialogTableVisible","title","components","virtualList","setup","Middle","store","loading","query","params","state","app","dataMap","items","uid","text","Array","pageModeFullPage","pageMode","data","value","console","log","getModule","async","OrderId","orderId","api","module","res","modules","index","forEach","item","mod","moduleId","file","componentItem","id","name","component","columns","Columns","enterpriseId","push","toUpperCase","commit","render","_typeof","obj","Symbol","iterator","constructor","prototype","arr","this","funcArr","fn","shift","dispatch","next"],"mappings":"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","file":"js/chunk-f9da2d76.dd279bf7.js","sourcesContent":["<template>\r\n\t<div class=\"detail-mod\">\r\n\t\t{{moudleList.length}}\r\n\t\t{{complete}}\r\n\t\t<virtualList v-if=\"complete\"\r\n\t\t\t:data-key=\"'id'\"\r\n\t\t\t:data-sources=\"moudleList\"\r\n\t\t\t:data-component=\"itemComponent\"\r\n\t\t\t:wrap-class=\"`list-item-wrap`\"\r\n\t\t\t:item-class=\"'list-item-page'\"\r\n\t\t\t:page-mode=\"true\"\r\n\t\t\t:keeps=\"10\"\r\n\t\t\t:buffer=\"10\"\r\n\t\t\t:estimate-size=\"20\"\r\n\t\t\t:extra-props=\"{\r\n\t\t\t\tmoduleList: moudleList,\r\n\t\t\t}\">\r\n\t\t</virtualList>\r\n\t\t<!--DynamicScroller\r\n\t\t\tstyle=\"height: 100%\"\r\n\t\t\t:items=\"moudleList\"\r\n\t\t\t:min-item-size=\"54\"\r\n\t\t\tclass=\"scroller\">\r\n\t\t\t<template v-slot=\"{ item, index, active }\">\r\n\t\t\t\t<DynamicScrollerItem\r\n\t\t\t\t\t:item=\"item\"\r\n\t\t\t\t\t:active=\"active\"\r\n\t\t\t\t\t:data-index=\"index\">\r\n\t\t\t\t\t<Suspense>\r\n\t\t\t\t\t\t<component\r\n\t\t\t\t\t\t\t:index=\"index\" \r\n\t\t\t\t\t\t\t:active=\"active\" \r\n\t\t\t\t\t\t\t:item=\"item\" \r\n\t\t\t\t\t\t\t:data=\"item.data\"\r\n\t\t\t\t\t\t\t:is=\"item.components.component\" \r\n\t\t\t\t\t\t\t:columns=\"item.components.columns\">\r\n\t\t\t\t\t\t</component>\r\n\t\t\t\t\t</Suspense>\r\n\t\t\t\t</DynamicScrollerItem>\r\n\t\t\t</template>\r\n\t\t</DynamicScroller-->\r\n\t\t<el-dialog\r\n\t\t\tv-elDragDialog\r\n\t\t\tv-model=\"dialogTableVisible\"\r\n\t\t\ttitle=\"Shipping address\">\r\n\t\t</el-dialog>\r\n  \t</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, reactive, toRefs, watch, defineAsyncComponent, onBeforeMount, onMounted, computed , ComputedRef} from 'vue'\r\nimport { componentsConfig } from '@/config/report.config'\r\nimport { Modules } from '@/model/moduleObject'\r\nimport virtualList from '@/plugins/vue-virtual-scroll-list'\r\n// import { elDragDialog } from '@/directives/dragDialog/index'\r\nimport Loading from '@/utils/loading'\r\nimport { formatModule } from '@/utils/module'\r\nimport { isArray } from '@/utils/validate'\r\nimport api from '@/http/api'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { useStore } from '@/store'\r\n\r\nimport Middle from './Middle.vue'\r\nimport { asyncFun } from '@/utils/async'\r\nexport default defineComponent({\r\n\tcomponents: {\r\n\t\tvirtualList\r\n\t},\r\n\tsetup() {\r\n\t\tconst itemComponent = Middle\r\n\t\tconst { loading } = Loading()\r\n\t\tconst store = useStore()\r\n\t\tconst { params, query } = useRoute()\r\n\t\tlet complete: ComputedRef<Boolean> = computed(() => {\r\n\t\t\treturn store.state.app.complete\r\n\t\t})\r\n\t\tconst dataMap = reactive({\r\n\t\t\titems: [{uid: 'unique_1', text: 'abc'}, {uid: 'unique_2', text: 'xyz'}, {uid: 'unique_3', text: 'ccd'}, {uid: 'unique_4', text: 'cdv'}],\r\n\t\t\tdialogTableVisible: false,\r\n\t\t\tcomponents: Array<Modules>(),\r\n\t\t\tpageModeFullPage: true,\r\n\t\t\tpageMode: true,\r\n\t\t\tmoudleList: computed(() => {\r\n\t\t\t\treturn store.state.app.data\r\n\t\t\t})\r\n\t\t\t\t\r\n\t\t})\r\n\t\twatch(store.state.app.complete, (value: Boolean) => {\r\n\t\t\tconsole.log(\"complete\", value )\r\n\t\t\t// done = value\r\n\t\t})\r\n\t\twatch(store.state.app.data, (value: any) => {\r\n\t\t\tstore.state.app.data = value\r\n\t\t})\r\n\t\t// const loadingInstance = loading('请等待...')\r\n\t\t// setTimeout( () => {\r\n\t\t// \tloadingInstance.close()\r\n\t\t// }, 1000)\r\n\t\tconst getModule = async() => {\r\n\t\t\tconst params = {\r\n\t\t\t\tOrderId: query.orderId\r\n\t\t\t}\r\n      \t\tconst res: any = await api.module.getModule(params)\r\n\t\t\tif (res && res.data) {\r\n\t\t\t\tconst modules = formatModule(res.data)\r\n\t\t\t\tconst items: Array<any> = []\r\n\t\t\t\tlet index: number = 0\r\n\t\t\t\tmodules.forEach((item: any) => {\r\n\t\t\t\t\tconst mod = 'mod' + item.moduleId\r\n\t\t\t\t\tconst file = componentsConfig[mod]\r\n\t\t\t\t\tif (file) {\r\n\t\t\t\t\t\tconst componentItem: Modules = {\r\n\t\t\t\t\t\t\tid: ++index,\r\n\t\t\t\t\t\t\tname: mod,\r\n\t\t\t\t\t\t\tcomponent: defineAsyncComponent(() => import(`@/${file}`)),\r\n\t\t\t\t\t\t\tcolumns: item.Columns\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst params = {\r\n\t\t\t\t\t\t\t'enterpriseId': query.enterpriseId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\titems.push({name: mod.toUpperCase(), params, componentItem})\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tconst async = new asyncFun(items)\r\n\t\t\t\tstore.commit('funcList', async)\r\n\t\t\t}\r\n    \t}\r\n\t\tonBeforeMount(() => {\r\n\t\t\tgetModule()\r\n\t\t})\r\n\t\tonMounted(() => {\r\n\t\t})\r\n\t\treturn {\r\n\t\t\tcomplete,\r\n\t\t\t...toRefs(dataMap),\r\n\t\t\tgetModule,\r\n\t\t\titemComponent\r\n\t\t}\r\n\t}\r\n})\r\n</script>\r\n","\r\nimport { defineComponent, reactive, toRefs, watch, defineAsyncComponent, onBeforeMount, onMounted, computed , ComputedRef} from 'vue'\r\nimport { componentsConfig } from '@/config/report.config'\r\nimport { Modules } from '@/model/moduleObject'\r\nimport virtualList from '@/plugins/vue-virtual-scroll-list'\r\n// import { elDragDialog } from '@/directives/dragDialog/index'\r\nimport Loading from '@/utils/loading'\r\nimport { formatModule } from '@/utils/module'\r\nimport { isArray } from '@/utils/validate'\r\nimport api from '@/http/api'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { useStore } from '@/store'\r\n\r\nimport Middle from './Middle.vue'\r\nimport { asyncFun } from '@/utils/async'\r\nexport default defineComponent({\r\n\tcomponents: {\r\n\t\tvirtualList\r\n\t},\r\n\tsetup() {\r\n\t\tconst itemComponent = Middle\r\n\t\tconst { loading } = Loading()\r\n\t\tconst store = useStore()\r\n\t\tconst { params, query } = useRoute()\r\n\t\tlet complete: ComputedRef<Boolean> = computed(() => {\r\n\t\t\treturn store.state.app.complete\r\n\t\t})\r\n\t\tconst dataMap = reactive({\r\n\t\t\titems: [{uid: 'unique_1', text: 'abc'}, {uid: 'unique_2', text: 'xyz'}, {uid: 'unique_3', text: 'ccd'}, {uid: 'unique_4', text: 'cdv'}],\r\n\t\t\tdialogTableVisible: false,\r\n\t\t\tcomponents: Array<Modules>(),\r\n\t\t\tpageModeFullPage: true,\r\n\t\t\tpageMode: true,\r\n\t\t\tmoudleList: computed(() => {\r\n\t\t\t\treturn store.state.app.data\r\n\t\t\t})\r\n\t\t\t\t\r\n\t\t})\r\n\t\twatch(store.state.app.complete, (value: Boolean) => {\r\n\t\t\tconsole.log(\"complete\", value )\r\n\t\t\t// done = value\r\n\t\t})\r\n\t\twatch(store.state.app.data, (value: any) => {\r\n\t\t\tstore.state.app.data = value\r\n\t\t})\r\n\t\t// const loadingInstance = loading('请等待...')\r\n\t\t// setTimeout( () => {\r\n\t\t// \tloadingInstance.close()\r\n\t\t// }, 1000)\r\n\t\tconst getModule = async() => {\r\n\t\t\tconst params = {\r\n\t\t\t\tOrderId: query.orderId\r\n\t\t\t}\r\n      \t\tconst res: any = await api.module.getModule(params)\r\n\t\t\tif (res && res.data) {\r\n\t\t\t\tconst modules = formatModule(res.data)\r\n\t\t\t\tconst items: Array<any> = []\r\n\t\t\t\tlet index: number = 0\r\n\t\t\t\tmodules.forEach((item: any) => {\r\n\t\t\t\t\tconst mod = 'mod' + item.moduleId\r\n\t\t\t\t\tconst file = componentsConfig[mod]\r\n\t\t\t\t\tif (file) {\r\n\t\t\t\t\t\tconst componentItem: Modules = {\r\n\t\t\t\t\t\t\tid: ++index,\r\n\t\t\t\t\t\t\tname: mod,\r\n\t\t\t\t\t\t\tcomponent: defineAsyncComponent(() => import(`@/${file}`)),\r\n\t\t\t\t\t\t\tcolumns: item.Columns\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst params = {\r\n\t\t\t\t\t\t\t'enterpriseId': query.enterpriseId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\titems.push({name: mod.toUpperCase(), params, componentItem})\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tconst async = new asyncFun(items)\r\n\t\t\t\tstore.commit('funcList', async)\r\n\t\t\t}\r\n    \t}\r\n\t\tonBeforeMount(() => {\r\n\t\t\tgetModule()\r\n\t\t})\r\n\t\tonMounted(() => {\r\n\t\t})\r\n\t\treturn {\r\n\t\t\tcomplete,\r\n\t\t\t...toRefs(dataMap),\r\n\t\t\tgetModule,\r\n\t\t\titemComponent\r\n\t\t}\r\n\t}\r\n})\r\n","import { render } from \"./List.vue?vue&type=template&id=3ca85636\"\nimport script from \"./List.vue?vue&type=script&lang=ts\"\nexport * from \"./List.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import { useStore } from '@/store'\r\nconst store = useStore()\r\nexport class asyncFun implements asyncFun {\r\n    funcArr: Array<any>\r\n    constructor(arr: Array<any>) {\r\n        this.funcArr = arr\r\n    }\r\n    next(): void {\r\n        if(this.funcArr.length > 0) {\r\n            const fn = this.funcArr.shift()\r\n            const {name, params, componentItem } = fn\r\n            if(typeof fn === 'object'){\r\n                store.dispatch(name, {params, componentItem})\r\n            }\r\n        } else {\r\n            store.state.app.complete = true\r\n        }\r\n        \r\n    }\r\n    run(): void {\r\n        this.next()\r\n    }\r\n}"],"sourceRoot":""}